version: 2

models:
    - name: zengrc_assessment
      description: '{{ doc("zengrc_assessments_desc") }}'
      columns: 
        - name: assessment_id
          tests:
            - not_null
            - unique

    - name: zengrc_audit
      description: '{{ doc("zengrc_audits_desc") }}'
      columns: 
        - name: audit_id
          tests:
            - not_null
            - unique

    - name: zengrc_control
      description: '{{ doc("zengrc_controls_desc") }}'
      columns: 
        - name: control_id
          tests:
            - not_null
            - unique

    - name: zengrc_objective
      description: '{{ doc("zengrc_objectives_desc") }}'
      columns: 
        - name: objective_id
          tests:
            - not_null
            - unique

    - name: zengrc_program
      description: This table is derived from the `zengrc_audits_source`, `zengrc_issue_source`, and `zengrc_request_source` table until the program is explicitly brought into the data warehouse.
      columns: 
        - name: program_id
          tests:
            - not_null
            - unique

    - name: zengrc_person
      description: This table is derived from the `zengrc_audit_source`, `zengrc_assessment_source`, and `zengrc_requests_source` tables until the person object is explicitly brought into the data warehouse.
      columns: 
        - name: person_id
          tests:
            - not_null
            - unique

    - name: zengrc_assessment_to_assessors
      description: This table lists the many to many relationship between Person, the assessor, and an assessment.  Joining this table to Assessment directly will result in duplicate rows.

    - name: zengrc_assessment_to_audit
      description: The tables list the many to many relationship between Assessment and Audit. Joining this table to Assessment or Audit directly will result in duplicate rows.

    - name: zengrc_audit_to_audit_managers
      description: This table lists the many to many relationship between Person, the audit manager, and an audit.  Joining this table to Audit directly will result in duplicate rows.

    - name: zengrc_control_to_objective
      description: The tables list the many to many relationship between Control and Objective. Joining this table to Control or Objective directly will result in duplicate rows.

    - name: zengrc_issue
      description: '{{ doc("zengrc_issues_desc") }}'
      columns: 
        - name: issue_id
          tests:
            - not_null
            - unique

    - name: zengrc_issue_to_audit
      description: The tables list the many to many relationship between Issue and Audit. Joining this table to Issue or Audit directly will result in duplicate rows.
      
    - name: zengrc_issue_to_control
      description: The tables list the many to many relationship between Issue and Control. Joining this table to Issue or Control directly will result in duplicate rows.
      
    - name: zengrc_issue_to_program
      description: The tables list the many to many relationship between Issue and Program. Joining this table to Issue or Program directly will result in duplicate rows.
      
    - name: zengrc_request
      description: '{{ doc("zengrc_requests_desc") }}'
      columns: 
        - name: request_id
          tests:
            - not_null
            - unique
      
    - name: zengrc_request_to_assignees
      description: This table lists the many to many relationship between Person, the assignee, and an request.  Joining this table to Request directly will result in duplicate rows.
      
    - name: zengrc_request_to_control
      description: The tables list the many to many relationship between Request and Control. Joining this table to Request or Control directly will result in duplicate rows.
      
    - name: zengrc_request_to_issue
      description: The tables list the many to many relationship between Request and Issue. Joining this table to Request or Issue directly will result in duplicate rows.
      
    - name: zengrc_request_to_requestors
      description: This table lists the many to many relationship between Person, the requestor, and an request.  Joining this table to Request directly will result in duplicate rows.
      
    - name: zengrc_risk
      description: '{{ doc("zengrc_risks_desc") }}'
      columns: 
        - name: risk_id
          tests:
            - not_null
            - unique
      

    - name: wk_infradev_base
      description: >
        Table containing age metrics & related metadata for gitlab.com internal issues. Used for tracking internal work progress for things like Engineering Allocation & Corrective Actions
        These metrics are available for individual issues at daily level & can be aggregated up from there
      
      columns: 
        - name: daily_issue_id
          tests:
            - not_null
            - unique

    - name: infradev_issues_base
      description: A model to limit GitLab.com issues to only thous relevant to infradev engineering team.    

    - name: infradev_current_issue_users
      description: A model to generate a list of current assigned users on an issue. Not explicitly limited to the infradev team. 

    - name: infradev_label_history
      description: A model identify the valid historic range of specific labels that are explicitly related to the infradev team.

    - name: infradev_namespace_path
      description: A model to concatenate the full namespace path, up to four levels deep.  Not explicitly limited to the infradev team.

    - name: internal_note_awards
      description: A model to expose the awards at the note level.  This table is limited to Issues and Merge Requests that are a part of internal GitLab projects.
      tests:
        - dbt_utils.unique_combination_of_columns:
            combination_of_columns:
              - note_id
              - award_emoji_id

    - name: ha_proxy_metrics
      description: > 
        A table of the total bytes out various back end sources in HA Proxy.
        Bases on the query defined at: https://gitlab.com/gitlab-com/runbooks/-/blob/master/periodic-thanos-queries/daily-haproxy-bytes.queries.jsonnet        
      tests:
        - dbt_utils.unique_combination_of_columns:
            combination_of_columns:
              - backend
              - recorded_at

    - name: leading_organization_entry_dates
      description: The entry and exit dates of organizations that are admitted into our Leading Organization program

    - name: engineering_merge_requests
      description: A model containing all MRs that affect our product. This model includes relevant and common flags that are used in engineering metrics.
      columns: 
        - name: merge_request_id
          tests:
            - not_null
            - unique
        - name: merge_request_iid
          description: The ID appended to the merge request link
        - name: author_id
          description: The user_id that created the merge request
        - name: is_created_by_bot
          description: Boolean field that identifies whether the merge request was created by a bot
        - name: assignee_id
          description: The user_id that is assigned to the merge request
        - name: project_id
          description: The project_id related to the merge request
        - name: target_project_id
          description: The target_project_id related to the merge request
        - name: merge_request_state
          description: The merge_request_state related to the merge request
        - name: created_at
          description: When the merge request was created
        - name: updated_at
          description: When the merge request was updated
        - name: merged_at
          description: When the merge request was merged
        - name: created_month
          description: Which month the merge request was created
        - name: merge_month
          description: Which month the merge request was merged
        - name: days_to_merge
          description: Number of days it takes from when the merge request was created to merged
        - name: merge_request_title
          description: Title of merge request
        - name: merge_request_description
          description: Description of merge request
        - name: milestone_id
          description: The milestone_id related to the merge request
        - name: milestone_title
          description: The title of the related milestone_id
        - name: milestone_description
          description: The description of the related milestone_id
        - name: namespace_id
          description: The namespace_id related to the merge request
        - name: labels
          description: The labels on a merge request
        - name: masked_label_title
          description: String version of labels, separated by '|'
        - name: is_community_contribution
          description: Boolean field that identifies whether the merge request is a community contribution via labels
        - name: is_security
          description: Boolean field that identifies whether the merge request is related to security via labels
        - name: priority_label
          description: The value following a priority label ('priority::%'')
        - name: severity_label
          description: The value following a severity label ('severity::%'')
        - name: group_label
          description: The group that the merge request is related to. This is extracted from labels ('group::%''), however, if a group is not in the latest yml file, it will be considered undefined.
        - name: section_label
          description: The section that the merge request is related to. This is extracted from labels ('section::%''), however, if a group is not in the latest yml file, it will be considered undefined.
        - name: stage_label
          description: The stage that the merge request is related to. This is extracted from labels ('devops::%''), however, if a group is not in the latest yml file, it will be considered undefined.
        - name: type_label
          description: The worktype type classification, defined as either a bug, maintenance, or feature.
        - name: subtype_label
          description: The worktype subtype classification that matches a type_label
        - name: visibility_level
          description: Indicate if the merge request lives in a private or public project
        - name: full_group_path
          description: The group path in the merge request URL
        - name: url
          description: Merge request URL
    - name: rpt_gcp_billing_infra_mapping_day
      description: GCP costs with base attributes and infra labels (gl_product_category)

    - name: rpt_gcp_billing_pl_mapping_infra_day
      description: output pl mapping table

    - name: infralabel_pl
      description: Direct infra label and pl relationship

    - name: namespace_pl_daily
      description: pl namespace classification per namespace per day

    - name: repo_storage_pl_daily
      description: size of repository per pl (namespace classification) per day

    - name: sandbox_projects_pl
      description: Direct GCP project and pl relationship

    - name: rpt_gcp_billing_skus_day
      description: GCP costs mapped with usage sku mapping