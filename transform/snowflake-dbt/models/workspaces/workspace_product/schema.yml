version: 2

models:
  - name: wk_customers_db_license_versions
    tags: ["exception", "product"]
    description: Self-managed EE instances will send seat link information to the customers portal on a daily basis. This information includes a license version data. Additional detail can be found in [this doc](https://gitlab.com/gitlab-org/customers-gitlab-com/-/blob/staging/doc/reconciliations.md).
    columns:
      - name: id
        description: Pseudo ID generated to simulate Primary Key
        tags:
          - customers_db
      - name: item_id
        description: Line if for item
        tags:
          - customers_db
      - name: created_at
        description: Timestamp when the record was created
        tags:
          - customers_db
      - name: item_type
        description: Item type, for example - License
        tags:
          - customers_db
      - name: event
        description: Name of the event, for example - create, update
        tags:
          - customers_db
      - name: whodunnit
        description: Email for licensing
        tags:
          - customers_db
      - name: whodunnit_gitlab
        description: Email for licensing, contains either @gitlab.com email (value from whodunnit)  or NULL
        tags:
          - customers_db
      - name: whodunnit_gitlab_desc
        description: Email for licensing, contains either @gitlab.com email or NULL. Can contain `Admin` string
        tags:
          - customers_db
      - name: object
        description: Details about license
        tags:
          - customers_db
      - name: object_changes
        description: Details about license changes
        tags:
          - customers_db
      - name: _uploaded_at
        description: Timestamp when record is inserted in the RAW layer

  - name: wk_rpt_event_namespace_plan_monthly
    description: '{{ doc("wk_rpt_event_namespace_plan_monthly") }}'
    columns:
      - name: namespace_monthly_pk
        description: The unique identifier for an ultimate parent namespace and calendar month, generated by the surrogate_key macro in dbt
        tests:
          - not_null
          - unique
      - name: event_calendar_month
        description: '{{ doc("event_calendar_month") }}'
      - name: dim_ultimate_parent_namespace_id
        description: '{{ doc("dim_ultimate_parent_namespace_id") }}'
      - name: plan_id_at_event_month
        description: The ID of the ultimate parent namespace's plan on the final event in the calendar month (ex. 34, 100, 101, etc). Defaults to '34' (free) if a value is not available.
      - name: plan_name_at_event_month
        description: The name of the ultimate parent namespace's plan on the final event in the calendar month (ex. free, premium, ultimate, etc). Defaults to 'free' if a value is not available.
      - name: plan_was_paid_at_event_month
        description: Boolean flag which is set to True if the ultimate parent namespace's plan was paid on the final event in the calendar month. Defaults to False if a value is not available.
      - name: plan_id_count
        description: The distinct count of plan IDs associated with the ultimate parent namespace during the calendar month.
      - name: plan_id_list
        description: Comma-separated list of plan IDs associated with the ultimate parent namespace during the calendar month.
      - name: plan_name_list
        description: Comma-separated list of plan names associated with the ultimate parent namespace during the calendar month.
      - name: namespace_is_internal
        description: '{{ doc("namespace_is_internal") }}'
      - name: ultimate_parent_namespace_type
        description: '{{ doc("ultimate_parent_namespace_type") }}'
      - name: namespace_creator_is_blocked
        description: '{{ doc("namespace_creator_is_blocked") }}'
      - name: first_day_of_reporting_period
        description: First day of the 28-day reporting period used for xMAU and PI reporting. Defined as `DATEADD('day', -27, LAST_DAY(event_calendar_month))`
      - name: last_day_of_reporting_period
        description: Last day of the 28-day reporting period used for xMAU and PI reporting. Defined as `LAST_DAY(event_calendar_month)`
      - name: has_event_during_reporting_period
        description: Boolean flag set to True of the ultimate parent namespace has at least 1 event during the reporting period (i.e., last 28 days of the month). Filter to True in order to have this model tie out to "official" reporting models (ex. rpt_event_xmau_metric_monthly)
      - name: created_by
        description: '{{ doc("created_by") }}'
      - name: updated_by
        description: '{{ doc("updated_by") }}'
      - name: model_created_date
        description: '{{ doc("model_created_date") }}'
      - name: model_updated_date
        description: '{{ doc("model_updated_date") }}'
      - name: dbt_updated_at
      - name: dbt_created_at

  - name: suggested_merge_request_reviewers
    description: Table for exploring the suggested reviewers for a merge request

  - name: wk_gitlab_dotcom_namespace_details
    description: Workspace table for exposing gitlab_dotcom_namespace_details table to Sisense.

  - name: wk_gitlab_dotcom_namespace_details_snapshots
    description: Workspace table for exposing gitlab_dotcom_namespace_details_snapshots table to Sisense.

  - name: wk_gitlab_dotcom_web_hooks
    description: Workspace table for exposing gitlab_dotcom_web_hooks table to Sisense.

  - name: wk_usage_ping_geo_node_usage
    description: Workspace table for Service ping geo node usage
    columns:
      - name: uploaded_at
        description: '{{ doc("wk_usage_ping_geo_node_usage_uploaded_at") }}'
        tests:
          - not_null

  - name: wk_rpt_behavior_code_suggestion_outcome
    description: '{{ doc("wk_rpt_behavior_code_suggestion_outcome") }}'
    columns:
      - name: suggestion_id
        description: The unique identifier for the code suggestion. Appears as `event_label` on the Snowplow events
        tests:
          - not_null
          - unique
      - name: language
        description: '{{ doc("language") }}'
      - name: delivery_type
        description: ' {{ doc("product_delivery_type") }} In the raw Snowplow data, this field comes through as `gitlab_realm`. Appears in the `code_suggestions_context`.'
        tests:
            - accepted_values:
                values: ['Self-Managed', 'SaaS']
      - name: model_engine
        description: '{{ doc("model_engine") }}'
      - name: model_name
        description: '{{ doc("model_name") }}'
      - name: prefix_length
        description: '{{ doc("prefix_length") }}'
      - name: suffix_length
        description: '{{ doc("suffix_length") }}'
      - name: extension_name
        description: '{{ doc("extension_name") }}'
      - name: extension_version
        description: '{{ doc("extension_version") }}'
      - name: ide_name
        description: '{{ doc("ide_name") }}'
      - name: ide_vendor
        description: '{{ doc("ide_vendor") }}'
      - name: ide_version
        description: '{{ doc("ide_version") }}'
      - name: language_server_version
        description: '{{ doc("language_server_version") }}'
      - name: requested_at
        description: Timestamp of the `suggestion_requested` event. This event is sent when the IDE extension requests a suggestion from the backend.
      - name: loaded_at
        description: Timestamp of the `suggestion_loaded` event. This event is sent when the suggestion request returns without error.
      - name: shown_at
        description: Timestamp of the `suggestion_shown` event. This event is sent when the suggestion is shown to the user.
      - name: accepted_at
        description: Timestamp of the `suggestion_accepted` event. This event is sent when the suggestion was shown and then accepted by the user.
      - name: rejected_at
        description: Timestamp of the `suggestion_rejected` event. This event is sent when the suggestion was shown and then rejected by the user.
      - name: cancelled_at
        description: Timestamp of the `suggestion_cancelled` event. This event is sent when the suggestion request was canceled and not shown. For example, the user starts typing again before the suggestion is shown.
      - name: not_provided_at
        description: Timestamp of the `suggestion_not_provided` event. This event is sent when no suggestion was provided that could be shown to the user. This can happen if the suggestion does not meet a rule designed to limit poor suggestions from being shown. For example, the suggestion is all whitespace characters.
      - name: error_at
        description: Timestamp of the `suggestion_error` event. This event is sent when the suggestion request leads to an error.
      - name: load_time_in_ms
        description: The difference (in ms) between the `suggestion_requested` and `suggestion_loaded` events
      - name: display_time_in_ms
        description: The difference (in ms) between the `suggestion_shown` and `suggestion_accepted` or `suggestion_rejected` events
      - name: suggestion_outcome
        description: The outcome of the suggestion (ex. `suggestion_accepted`, `suggestion_rejected`, `suggestion_cancelled`, `suggestion_error`, etc)
      - name: was_requested
        description: Boolean flag set to `TRUE` if the suggestion had a `suggestion_requested` event. This event is sent when the IDE extension requests a suggestion from the backend. This field will always be TRUE.
      - name: was_loaded
        description: Boolean flag set to `TRUE` if the suggestion had a `suggestion_loaded` event. This event is sent when the suggestion request returns without error.
      - name: was_shown
        description: Boolean flag set to `TRUE` if the suggestion had a `suggestion_shown` event. This event is sent when the suggestion is shown to the user.
      - name: was_accepted
        description: Boolean flag set to `TRUE` if the suggestion had a `suggestion_accepted` event. This event is sent when the suggestion was shown and then accepted by the user.
      - name: was_rejected
        description: Boolean flag set to `TRUE` if the suggestion had a `suggestion_rejected` event. This event is sent when the suggestion was shown and then rejected by the user.
      - name: was_cancelled
        description: Boolean flag set to `TRUE` if the suggestion had a `suggestion_cancelled` event. This event is sent when the suggestion request was canceled and not shown. For example, the user starts typing again before the suggestion is shown.
      - name: was_not_provided
        description: Boolean flag set to `TRUE` if the suggestion had a `suggestion_not_provided` event. This event is sent when no suggestion was provided that could be shown to the user. This can happen if the suggestion does not meet a rule designed to limit poor suggestions from being shown. For example, the suggestion is all whitespace characters.
      - name: was_error
        description: Boolean flag set to `TRUE` if the suggestion had a `suggestion_error` event. This event is sent when the suggestion request leads to an error.
      - name: created_by
        description: '{{ doc("created_by") }}'
      - name: updated_by
        description: '{{ doc("updated_by") }}'
      - name: model_created_date
        description: '{{ doc("model_created_date") }}'
      - name: model_updated_date
        description: '{{ doc("model_updated_date") }}'

