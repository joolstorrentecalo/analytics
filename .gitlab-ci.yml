# ======
# Globals
# ======

variables:
  PYTHONPATH: "$CI_PROJECT_DIR/orchestration/:$CI_PROJECT_DIR/extract/:$CI_PROJECT_DIR/extract/shared_modules/:$PYTHONPATH"
  BRANCH_NAME: "$CI_COMMIT_REF_NAME"

# ======
# Workflows
# ======
# Rules explaination: https://docs.gitlab.com/ee/ci/yaml/workflow.html#switch-between-branch-pipelines-and-merge-request-pipelines

workflow:
  rules:
    - if: $CI_COMMIT_BRANCH && $CI_OPEN_MERGE_REQUESTS && $CI_PIPELINE_SOURCE == "push"
      when: never
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $CI_COMMIT_BRANCH && $CI_OPEN_MERGE_REQUESTS
      when: never
    - if: $CI_COMMIT_BRANCH

# ======
# CI Stages
# ======
stages:
  - base
  - üêç Python

job_name:
  stage: base
  script:
    - echo "Hello, GitLab CI!"

.snowflake_provisioning_automation: &snowflake_provisioning_automation
  stage: üêç Python
  image: registry.gitlab.com/gitlab-data/data-image/data-image:v2.0.7
  tags:
    - analytics
  before_script:
    - echo "hello world"

snowflake_provisioning_snowflake_users:
  <<: *snowflake_provisioning_automation
  rules:
    # only allow trigger if MR approved
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event" && $CI_MERGE_REQUEST_APPROVED == "true"'
      when: manual
  script:
    - echo "hello users"

snowflake_provisioning_roles_yaml:
  <<: *snowflake_provisioning_automation
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      when: manual
  script:
    - echo "hello roles"
